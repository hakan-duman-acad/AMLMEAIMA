p1 <- function(x,l=60) {
library(tidyverse)
library(clipr)
n <- l - nchar(x) -2
lft <- round(n/2)
rght <- l - nchar(x) - lft - 2
tmp <- paste0(strrep("#",l),"\n")
tmp <- paste0(tmp,"#",strrep(" ",lft), str_to_upper(x,locale = "TR"), strrep(" ",rght),"#\n")
tmp <- paste0(tmp,strrep("#",l),"\n")
clipr:::X11_write_clip(tmp,breaks = "\n",object_type = "character",eos = NULL,return_new = FALSE)
}
p1("veri setinin eğitim ve test setlerine ayrılması")
setwd("/home/hakan/Nextcloud/git-tez/AMLMEAIMA")
# bazı yardımcı fonksiyonlar
source("ortakfonks.R")
if (!require(reticulate)) install.packages("reticulate",
dependencies = TRUE)
############################################################
#      VERİ SETİNİN EĞİTİM VE TEST SETLERİNE AYRILMASI     #
############################################################
data <- read_csv(file = "data/tum_data.csv")
if (!require(caret)) install.packages("caret",
dependencies = TRUE)
egitimIndex <- createDataPartition(data$OV, p = .70, list = FALSE)
egitimIndex
testIndex <- 1:nrow(data)[-egitimIndex]
egitimIndex <- createDataPartition(data$OV, p = .70, list = FALSE)
testIndex <- 1:nrow(data)[-egitimIndex]
1:nrow(data)
1:nrow(data)[-egitimIndex]
egitimIndex <- createDataPartition(data$OV, p = .70)
testIndex <- 1:nrow(data)[-egitimIndex]
egitimIndex <- createDataPartition(data$OV, p = .70,groups = 20)
egitimIndex <- createDataPartition(data$OV, p = .70,groups = 20,list = FALSE)
egitimIndex
egitimIndex <- createDataPartition(data$OV,
p = .70,groups = 20,list = FALSE) %>%
as.vector()
testIndex <- 1:nrow(data)[-egitimIndex]
egitimIndex
1:nrow(data)[-egitimIndex]
1:nrow(data)
1:nrow(data)[1:10]
1:nrow(data)[1:10,]
1:nrow(data)[1:10]
testIndex <- 1:nrow(data)
testIndex[[-egitimIndex]]
testIndex[-egitimIndex]
testIndex <- 1:nrow(data)
testIndex <- testIndex[-egitimIndex]
write_rds(x = egitimIndex, file = "data/indexEgitim.Rds",compress = "bz")
write_rds(x = testIndex, file = "data/indexTest.Rds",compress = "bz")
egitimSeti <- data[egitimIndex,]
testSeti <- data[-egitimSeti, ]
testSeti <- data[-egitimIndex, ]
set.seed(2023)
egitimIndex <- createDataPartition(data$OV,
p = .70,groups = 20,list = FALSE) %>%
as.vector()
# sonradan kullanılmak üzere kayıt ediliyor
write_rds(x = egitimIndex, file = "data/indexEgitim.Rds",compress = "bz")
egitimSeti <- data[egitimIndex,]
testSeti <- data[-egitimIndex, ]
set.seed(2023)
egitimIndex <- createDataPartition(data$OV,
p = .75,groups = 20,list = FALSE) %>%
as.vector()
# sonradan kullanılmak üzere kayıt ediliyor
write_rds(x = egitimIndex, file = "data/indexEgitim.Rds",compress = "bz")
egitimSeti <- data[egitimIndex,]
testSeti <- data[-egitimIndex, ]
p1("python kodunun R'dan çağırılması")
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti, y = testSeti)
egitim$modelName
egitim$X
egitim$y
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim$y
egitim$X
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
sqrt(2449974)
source_python("model_egitim.py")
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = "MLR")
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = c("MLR","KNN"))
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:2500,] %>% select(-OV),
y = egitimSeti[1:2500,] %>% select(OV) %>% unlist(),modelName = c("MLR","KNN"))
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:2500,] %>% select(-OV),
y = egitimSeti[1:2500,] %>% select(OV) %>% unlist(),modelName = c("MLR","KNN"))
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:2500,] %>% select(-OV),
y = egitimSeti[1:2500,] %>% select(OV) %>% unlist(),modelName = c("MLR","KNN"))
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = c("MLR","KNN"))
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),modelName = c("MLP"))
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = c("DT"))
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = c("DT"))
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = c("DT"))
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = c("DT"))
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = c("DT"))
egitim$allModelNames
egitim$modelName
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = "DT")
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = "DT")
egitim$fit(cv=3)
egitim$allModelNames
egitim$modelName
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim$modelName
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim$modelName
egitim$allModelNames
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = "DT")
egitim$modelName
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = "DT")
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = "DT")
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = "DT")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = "DT")
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = c("DT","MLR"))
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(), modelName = c("DT","MLR"),useParams = FALSE)
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),
modelName = "ALL",useParams = FALSE)
egitim$fit(cv=3)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti %>% select(-OV),
y = egitimSeti %>% select(OV) %>% unlist())
egitim <- ModelEgitim(X = egitimSeti[1:250,] %>% select(-OV),
y = egitimSeti[1:250,] %>% select(OV) %>% unlist(),
modelName = "ALL",useParams = FALSE)
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:12500,] %>% select(-OV),
y = egitimSeti[1:12500,] %>% select(OV) %>% unlist(),
modelName = "ALL",useParams = FALSE)
egitim$fit(cv=3)
egitim <- ModelEgitim(X = egitimSeti[1:2500,] %>% select(-OV),
y = egitimSeti[1:2500,] %>% select(OV) %>% unlist(),
modelName = "ALL",useParams = TRUE)
source_python("model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:2500,] %>% select(-OV),
y = egitimSeti[1:2500,] %>% select(OV) %>% unlist(),
modelName = "ALL",useParams = TRUE)
egitim$fit(cv=10)
egitim <- ModelEgitim(X = egitimSeti[1:2500,] %>% select(-OV),
y = egitimSeti[1:2500,] %>% select(OV) %>% unlist(),
modelName = "ALL",useParams = TRUE)
egitim$fit(cv=3)
egitim$modelName
source_python("pyFiles/sigirOutlier.py")
source_python("pyFiles/model_egitim.py")
source_python("pyFiles/model_egitim.py")
source_python("pyFiles/model_egitim.py")
# bazı yardımcı fonksiyonlar
source("ortakfonks.R")
if (!require(reticulate)) install.packages("reticulate",
dependencies = TRUE)
# Eğer kurulu değilse mini conda kurulmalı
# veya use_condaenv() komutu ile mevcut bir conda ortamı seçilmeli
# install_miniconda() # bir kez çalıştıktan sonra comment olarak işaretlenmeli
# aşağıda gerekli python modüllerü kuruluyor
paketler <- readLines("requirements.txt")
# Eğer kurulu değilse mini conda kurulmalı
# veya use_condaenv() komutu ile mevcut bir conda ortamı seçilmeli
# install_miniconda() # bir kez çalıştıktan sonra comment olarak işaretlenmeli
# aşağıda gerekli python modüllerü kuruluyor
paketler <- readLines("pyFiles/requirements.txt")
############################################################
#      VERİ SETİNİN EĞİTİM VE TEST SETLERİNE AYRILMASI     #
############################################################
data <- read_csv(file = "data/tum_data.csv")
if (!require(caret)) install.packages("caret",
dependencies = TRUE)
set.seed(2023)
egitimIndex <- createDataPartition(data$OV,
p = .75,groups = 20,list = FALSE) %>%
as.vector()
egitimSeti <- data[egitimIndex,]
source_python("pyFiles/model_egitim.py")
egitim <- ModelEgitim(X = egitimSeti[1:2500,] %>% select(-OV),
y = egitimSeti[1:2500,] %>% select(OV) %>% unlist(),
modelName = "ALL",useParams = TRUE)
egitim$useParams
p1("Modellerin Kontrolü ve Mukayesesi")
setwd("...YOL.../AMLMEAIMA")
# bazı yardımcı fonksiyonlar
source("ortakfonks.R")
if (!require(reticulate)) install.packages("reticulate",
dependencies = TRUE)
p1("Yeniden örnekleme indekslerinin oluşturulması")
data <- read_csv(file = "data/tum_data.csv")  %>%
mutate_if(is.character,factor)
data <- read_csv(file = "data/tum_data.csv")  %>%
mutate_if(is.character,factor)
data
if (!require(caret)) install.packages("caret",
dependencies = TRUE)
egitimIndex <- read_rds(file = "data/indexEgitim.Rds")
kfoldEgitim <- createFolds(data[-egitimIndex,"OV"],k = 5,list = TRUE)
kfoldEgitim <- createFolds(data[-egitimIndex,"OV"],k = 5,list = FALSE)
str(kfoldEgitim)
kfoldEgitim <- createFolds(data$OV[-egitimIndex],k = 5,list = FALSE)
kfoldEgitim
egitim <- data[egitimIndex,]
test <- data[-egitimIndex,]
kfoldEgitim <- createFolds(egitim$OV,k = 5,list = FALSE)
kfoldTest <- createFolds(test$OV,k = 5,list = FALSE)
############################################################
#      YENİDEN ÖRNEKLEME İNDEKSLERİNİN OLUŞTURULMASI       #
############################################################
set.seed(2023)
data <- read_csv(file = "data/tum_data.csv")  %>%
mutate_if(is.character,factor)
egitimIndex <- read_rds(file = "data/indexEgitim.Rds")
egitim <- data[egitimIndex,]
test <- data[-egitimIndex,]
kfoldEgitim <- createFolds(egitim$OV,k = 5,list = FALSE)
kfoldTest <- createFolds(test$OV,k = 5,list = FALSE)
if (!require(MLmetrics)) install.packages("MLmetrics",
dependencies = TRUE)
kfoldEgitim <- createFolds(egitim$OV,k = 5,list = FALSE)
kfoldTest <- createFolds(test$OV,k = 5,list = FALSE)
kfoldEgitim == 1
sum(kfoldEgitim == 1)
i <- "MLR"
mod <- joblib$load(paste0("results/",i,"_mod.pkl"))
joblib <- import(module = "joblib")
mod <- joblib$load(paste0("results/",i,"_mod.pkl"))
preds = mod$predict(egitim[kfoldEgitim == 1])
preds = mod$predict(egitim[kfoldEgitim == 1,])
preds
egitim[kfoldEgitim == 1,]
a <- egitim[kfoldEgitim == 1,]
mod$predict(a)
mod$predict(X = a)
mod$predict(X = r_to_py(a))
r_to_py(a)
r_to_py(a,convert = "pands")
r_to_py(a,convert = TRUE)
r_to_py(a,convert = FALSE)
r_to_py(a)
#setwd("...YOL.../AMLMEAIMA")
source("ortakfonks.R")
